/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.escola.view;

import com.mycompany.escola.DAO.AlunoDAO;
import com.mycompany.escola.DAO.ProfessorDAO;
import com.mycompany.escola.model.Aluno;
import com.mycompany.escola.model.Professor;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Wellington
 */
public class Tela_listar extends javax.swing.JFrame {

    public Tela_listar() {
        initComponents();
        listar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable_pessoas = new javax.swing.JTable();
        jTextField_cpf = new javax.swing.JTextField();
        jLabel_cpf = new javax.swing.JLabel();
        jLabel_turma = new javax.swing.JLabel();
        jTextField_turma = new javax.swing.JTextField();
        jLabel_idade = new javax.swing.JLabel();
        jTextField_idade = new javax.swing.JTextField();
        jLabel_sobrenome = new javax.swing.JLabel();
        jTextField_sobrenome = new javax.swing.JTextField();
        jLabel_nome = new javax.swing.JLabel();
        jTextField_nome = new javax.swing.JTextField();
        jButton_editar = new javax.swing.JButton();
        jButton_excluir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Lista dos Alunos e Professores");

        jTable_pessoas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Função", "Nome", "Sobrenome", "Idade", "Turma(s)", "Matrícula", "CPF"
            }
        ));
        jTable_pessoas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_pessoasMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTable_pessoas);

        jTextField_cpf.setPreferredSize(new java.awt.Dimension(200, 26));

        jLabel_cpf.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_cpf.setText("CPF:");

        jLabel_turma.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_turma.setText("Turma:");

        jTextField_turma.setPreferredSize(new java.awt.Dimension(200, 26));
        jTextField_turma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_turmaActionPerformed(evt);
            }
        });

        jLabel_idade.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_idade.setText("Idade:");

        jTextField_idade.setPreferredSize(new java.awt.Dimension(100, 26));
        jTextField_idade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_idadeActionPerformed(evt);
            }
        });

        jLabel_sobrenome.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_sobrenome.setText("Sobrenome:");

        jTextField_sobrenome.setPreferredSize(new java.awt.Dimension(200, 26));
        jTextField_sobrenome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_sobrenomeActionPerformed(evt);
            }
        });

        jLabel_nome.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_nome.setText("Nome:");

        jTextField_nome.setPreferredSize(new java.awt.Dimension(200, 26));

        jButton_editar.setText("Editar");
        jButton_editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_editarActionPerformed(evt);
            }
        });

        jButton_excluir.setText("Excluir");
        jButton_excluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_excluirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(271, 271, 271)
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel_sobrenome)
                        .addComponent(jLabel_idade, javax.swing.GroupLayout.Alignment.LEADING))
                    .addComponent(jLabel_nome)
                    .addComponent(jLabel_turma))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField_turma, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextField_sobrenome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextField_nome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextField_idade, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel_cpf)
                .addGap(18, 18, 18)
                .addComponent(jTextField_cpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                .addComponent(jButton_editar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton_excluir)
                .addGap(69, 69, 69))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField_nome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel_nome)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel_cpf)
                            .addComponent(jTextField_cpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField_sobrenome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_sobrenome))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jTextField_idade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField_turma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton_editar)
                            .addComponent(jButton_excluir))
                        .addGap(35, 35, 35))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel_idade)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel_turma)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField_sobrenomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_sobrenomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_sobrenomeActionPerformed

    private void jButton_editarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_editarActionPerformed
        int linhaSelecionada = jTable_pessoas.getSelectedRow();

    if (linhaSelecionada == -1) {
        JOptionPane.showMessageDialog(this, "Selecione uma pessoa para editar.");
        return;
    }

    String tipo = jTable_pessoas.getValueAt(linhaSelecionada, 0).toString();

    int confirmacao = JOptionPane.showConfirmDialog(
        this,
        "Deseja realmente atualizar esta pessoa?",
        "Confirmação",
        JOptionPane.YES_NO_OPTION
    );

    if (confirmacao != JOptionPane.YES_OPTION) {
        return;
    }

    String nome = jTextField_nome.getText().trim();
    String sobrenome = jTextField_sobrenome.getText().trim();
    String idadeStr = jTextField_idade.getText().trim();
    String turma = jTextField_turma.getText().trim();
    String cpf = jTextField_cpf.getText().trim();

    if (nome.isEmpty() || sobrenome.isEmpty() || idadeStr.isEmpty() || turma.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Preencha todos os campos obrigatórios.");
        return;
    }

    int idade;
    try {
        idade = Integer.parseInt(idadeStr);
        if (idade <= 0) {
            JOptionPane.showMessageDialog(this, "Idade inválida.");
            return;
        }
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Idade deve ser um número inteiro.");
        return;
    }

    // Validação da turma: letras A, B ou C, separadas por vírgula opcional
    if (!turma.matches("(?i)^([A-C](,\\s*[A-C])*)$")) {
        JOptionPane.showMessageDialog(this, "Turma(s) inválida(s). Use A, B ou C separadas por vírgula.");
        return;
    }

    if ("Professor".equalsIgnoreCase(tipo)) {
        // Validação de CPF: 11 dígitos numéricos
        if (!cpf.matches("\\d{11}")) {
            JOptionPane.showMessageDialog(this, "CPF inválido. Deve conter exatamente 11 dígitos numéricos.");
            return;
        }

        String cpfOriginal = jTable_pessoas.getValueAt(linhaSelecionada, 6).toString();
        ProfessorDAO dao = new ProfessorDAO();
        Professor prof = dao.buscar(cpfOriginal);

        if (prof != null) {
            prof.setNome(nome);
            prof.setSobrenome(sobrenome);
            prof.setIdade(idade);
            prof.setTurmas(turma);
            prof.setCpf(cpf);

            dao.atualizar(prof, cpfOriginal);
            JOptionPane.showMessageDialog(this, "Professor atualizado com sucesso.");
        } else {
            JOptionPane.showMessageDialog(this, "Professor não encontrado para atualização.");
        }

    } else { // Aluno
        int matricula = Integer.parseInt(jTable_pessoas.getValueAt(linhaSelecionada, 5).toString());

        AlunoDAO dao = new AlunoDAO();
        Aluno aluno = dao.buscar(matricula);

        if (aluno != null) {
            aluno.setNome(nome);
            aluno.setSobrenome(sobrenome);
            aluno.setIdade(idade);
            aluno.setTurmaNome(turma);

            dao.atualizar(aluno);
            JOptionPane.showMessageDialog(this, "Aluno atualizado com sucesso.");
        } else {
            JOptionPane.showMessageDialog(this, "Aluno não encontrado para atualização.");
        }
    }

    listar();     // Atualiza a tabela
    limparCampos();  // Limpa os campos após a edição
    }//GEN-LAST:event_jButton_editarActionPerformed

    private void limparCampos() {
        jTextField_nome.setText("");
        jTextField_sobrenome.setText("");
        jTextField_idade.setText("");
        jTextField_turma.setText("");
        jTextField_cpf.setText("");
    }
    
    private void jTable_pessoasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_pessoasMouseClicked
        preencherCamposDaLinhaSelecionada();
    }//GEN-LAST:event_jTable_pessoasMouseClicked

    private void jTextField_turmaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_turmaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_turmaActionPerformed

    private void jTextField_idadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_idadeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_idadeActionPerformed

    private void jButton_excluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_excluirActionPerformed
        int linhaSelecionada = jTable_pessoas.getSelectedRow();

    if (linhaSelecionada == -1) {
        JOptionPane.showMessageDialog(this, "Selecione uma pessoa para excluir.");
        return;
    }

    int confirmacao = JOptionPane.showConfirmDialog(
        this,
        "Deseja realmente excluir esta pessoa?",
        "Confirmação",
        JOptionPane.YES_NO_OPTION
    );

    if (confirmacao != JOptionPane.YES_OPTION) {
        return;
    }

    String tipo = jTable_pessoas.getValueAt(linhaSelecionada, 0).toString();

    if ("Professor".equalsIgnoreCase(tipo)) {
        String cpf = jTable_pessoas.getValueAt(linhaSelecionada, 6).toString();

        ProfessorDAO dao = new ProfessorDAO();
        dao.removerPorCpf(cpf);
        JOptionPane.showMessageDialog(this, "Professor excluído com sucesso.");

    } else { // Aluno
        int matricula = Integer.parseInt(jTable_pessoas.getValueAt(linhaSelecionada, 5).toString());

        AlunoDAO dao = new AlunoDAO();
        dao.removerPorMatricula(matricula);
        JOptionPane.showMessageDialog(this, "Aluno excluído com sucesso.");
    }

    listar(); // Atualiza a tabela após a exclusão
    }//GEN-LAST:event_jButton_excluirActionPerformed
    
    private void preencherCamposDaLinhaSelecionada() {
        int linha = jTable_pessoas.getSelectedRow();
        
        if (linha != -1) {
            String tipo = jTable_pessoas.getValueAt(linha, 0).toString(); // "Aluno" ou "Professor"
            String nome = jTable_pessoas.getValueAt(linha, 1).toString(); //
            String sobrenome = jTable_pessoas.getValueAt(linha, 2).toString();
            String idadeStr = jTable_pessoas.getValueAt(linha, 3).toString();
            String turma = jTable_pessoas.getValueAt(linha, 4).toString();
            String cpf = jTable_pessoas.getValueAt(linha, 6) != null ? jTable_pessoas.getValueAt(linha, 6).toString() : "";
            
            jTextField_nome.setText(nome);
            jTextField_sobrenome.setText(sobrenome);
            jTextField_idade.setText(idadeStr);
            jTextField_turma.setText(turma);

            if ("Professor".equalsIgnoreCase(tipo)) {
                jLabel_cpf.setVisible(true);
                jTextField_cpf.setVisible(true);
                jTextField_cpf.setText(cpf);
            } else {
                jTextField_cpf.setVisible(false);
                jLabel_cpf.setVisible(false);
                jTextField_cpf.setText("");
            }
        }
    }
    
    public final void listar() {
        DefaultTableModel modelo = new DefaultTableModel(
            new Object[]{"Tipo", "Nome", "Sobrenome", "Idade", "Turma(s)", "Matrícula", "CPF"}, 0
        ) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false; // Nenhuma célula será editável
            }
        };

        jTable_pessoas.setModel(modelo);

        AlunoDAO alunoDao = new AlunoDAO();
        ProfessorDAO profDao = new ProfessorDAO();

        List<Aluno> alunos = alunoDao.listar();
        List<Professor> professores = profDao.listar();

        for (Aluno a : alunos) {
            modelo.addRow(new Object[]{
                "Aluno",
                a.getNome(),
                a.getSobrenome(),
                a.getIdade(),
                a.getTurmaNome(),
                a.getMatricula(),
                "" // CPF vazio para alunos
            });
        }

        for (Professor p : professores) {
            modelo.addRow(new Object[]{
                "Professor",
                p.getNome(),
                p.getSobrenome(),
                p.getIdade(),
                p.getTurmas(),
                "", // matrícula vazia para professores
                p.getCpf()
            });
        }
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tela_listar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tela_listar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tela_listar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tela_listar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_editar;
    private javax.swing.JButton jButton_excluir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel_cpf;
    private javax.swing.JLabel jLabel_idade;
    private javax.swing.JLabel jLabel_nome;
    private javax.swing.JLabel jLabel_sobrenome;
    private javax.swing.JLabel jLabel_turma;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable_pessoas;
    private javax.swing.JTextField jTextField_cpf;
    private javax.swing.JTextField jTextField_idade;
    private javax.swing.JTextField jTextField_nome;
    private javax.swing.JTextField jTextField_sobrenome;
    private javax.swing.JTextField jTextField_turma;
    // End of variables declaration//GEN-END:variables
}
